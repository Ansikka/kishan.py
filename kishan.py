import streamlit as st
from datetime import datetime

# ------------------ BhashaBuddy - Language Support ------------------
LANGUAGE_DATA = {
    "Hindi": {
        "welcome": "рдХреГрд╖рд┐ рдорд┐рддреНрд░ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!",
        "today_task": "рдЖрдЬ рдХреЗ рд▓рд┐рдП рдЖрдкрдХрд╛ рдХрд╛рд░реНрдп:",
        "no_task": "рдЖрдЬ рдХреЛрдИ рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░реНрдп рдирд╣реАрдВ рд╣реИред",
        "price_info": "рдордВрдбреА рдореВрд▓реНрдп рдЬрд╛рдирдХрд╛рд░реА:",
        "disease_detected": "рдлрд╕рд▓ рд░реЛрдЧ рдХрд╛ рдкрддрд╛ рдЪрд▓рд╛:",
        "govt_scheme": "рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛ рд╡рд┐рд╡рд░рдг:",
        "weather": "рдЖрдЬ рдХрд╛ рдореМрд╕рдо:",
        "chat": "рдХрд┐рд╕рд╛рди рд╕рд╣рд╛рдпрдХ рдЪреИрдЯрдмреЙрдЯ",
        "ask_question": "рдХреЛрдИ рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ"
    },
    "English": {
        "welcome": "Welcome to KrishiMitra!",
        "today_task": "Your task for today:",
        "no_task": "No specific task for today.",
        "price_info": "Mandi price information:",
        "disease_detected": "Crop disease detected:",
        "govt_scheme": "Government scheme details:",
        "weather": "Today's Weather:",
        "chat": "Farmer Help Chatbot",
        "ask_question": "Ask a question"
    },
    "Bangoli": {
        "welcome": "ржХрзГрж╖рж┐ржорж┐рждрзНрж░рждрзЗ ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржо!",
        "today_task": "ржЖржЬржХрзЗрж░ ржХрж╛ржЬ:",
        "no_task": "ржЖржЬ ржХрзЛржи ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХрж╛ржЬ ржирзЗржЗред",
        "price_info": "ржоржирзНржбрж┐рж░ ржорзВрж▓рзНржп рждржерзНржп:",
        "disease_detected": "ржлрж╕рж▓рзЗрж░ рж░рзЛржЧ рж╕ржирж╛ржХрзНржд рж╣ржпрж╝рзЗржЫрзЗ:",
        "govt_scheme": "рж╕рж░ржХрж╛рж░рж┐ ржкрзНрж░ржХрж▓рзНржк ржмрж┐ржмрж░ржг:",
        "weather": "ржЖржЬржХрзЗрж░ ржЖржмрж╣рж╛ржУржпрж╝рж╛:",
        "chat": "ржЪрж╛рж╖рж┐ рж╕рж╣рж╛ржпрж╝рждрж╛ ржЪрзНржпрж╛ржЯржмржЯ",
        "ask_question": "ржПржХржЯрж┐ ржкрзНрж░рж╢рзНржи ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи"
    }
}

TASKS = [
    "Check soil moisture levels",
    "Irrigate tomato crops",
    "Spray pesticide for aphids",
    "Harvest brinjal",
    "Apply organic fertilizer to field"
]

MANDI_PRICES = {
    "wheat": "тВ╣2200/qtl",
    "rice": "тВ╣1800/qtl",
    "mustard": "тВ╣5500/qtl"
}

GOVT_SCHEMES = {
    "PM-KISAN": "Rs. 6000 per year to eligible farmers",
    "PMFBY": "Crop insurance at nominal premium rates",
    "Soil Health Card": "Free soil testing and nutrient advice"
}

# ------------------ UI ------------------
st.set_page_config(page_title="KrishiMitra", layout="centered")

lang = st.selectbox("Choose Language", options=["English", "Hindi", "Bangoli"])
st.title(LANGUAGE_DATA[lang]["welcome"])

# ------------------ Task Suggestion ------------------
today = datetime.now().day
if today % 2 == 0:
    st.subheader(LANGUAGE_DATA[lang]['today_task'])
    st.success(TASKS[today % len(TASKS)])
else:
    st.info(LANGUAGE_DATA[lang]['no_task'])

# ------------------ Mandi Prices ------------------
st.subheader(LANGUAGE_DATA[lang]['price_info'])
for crop, price in MANDI_PRICES.items():
    st.write(f"ЁЯСЙ **{crop.title()}**: {price}")

# ------------------ Government Schemes ------------------
st.subheader(LANGUAGE_DATA[lang]['govt_scheme'])
scheme = st.selectbox("Select Scheme", list(GOVT_SCHEMES.keys()))
st.write(f"ЁЯУЛ {GOVT_SCHEMES[scheme]}")

# ------------------ Crop Disease Detection ------------------
st.subheader(LANGUAGE_DATA[lang]['disease_detected'])
image = st.file_uploader("Upload Crop Image", type=["jpg", "jpeg", "png"])
if image:
    st.image(image, caption="Uploaded Image", use_column_width=True)
    st.warning("ЁЯзк Simulated Result: Blight detected in tomato leaves")

# ------------------ Weather Forecast (Simulated) ------------------
st.subheader(LANGUAGE_DATA[lang]['weather'])
location = st.text_input("Enter Your Village or District Name")
if location:
    st.info(f"ЁЯУН Simulated Weather for **{location}**: 35┬░C, Clear Sky, Wind 10 km/h")

# ------------------ Farmer Chatbot (Simulated) ------------------
st.subheader(LANGUAGE_DATA[lang]['chat'])
query = st.text_input(LANGUAGE_DATA[lang]["ask_question"])
if query:
    st.success("ЁЯдЦ Chatbot: Please use neem-based pesticides for aphids.")

# import streamlit as st
# from datetime import datetime
# import streamlit.components.v1 as components

# # ------------------ Voice Support ------------------
# def speak_text(text):
#     js = f"""
#     <script>
#     var msg = new SpeechSynthesisUtterance("{text}");
#     window.speechSynthesis.speak(msg);
#     </script>
#     """
#     components.html(js)

# # ------------------ BhashaBuddy - Language Support ------------------
# LANGUAGE_DATA = {
#     "Hindi": {
#         "welcome": "\U0001F33E рдХреГрд╖рд┐ рдорд┐рддреНрд░ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ!",
#         "today_task": "\U0001F4CB рдЖрдЬ рдХреЗ рд▓рд┐рдП рдЖрдкрдХрд╛ рдХрд╛рд░реНрдп:",
#         "no_task": "тЪая╕П рдЖрдЬ рдХреЛрдИ рд╡рд┐рд╢реЗрд╖ рдХрд╛рд░реНрдп рдирд╣реАрдВ рд╣реИред",
#         "price_info": "\U0001F4B8 рдордВрдбреА рдореВрд▓реНрдп рдЬрд╛рдирдХрд╛рд░реА:",
#         "disease_detected": "\U0001F33F рдлрд╕рд▓ рд░реЛрдЧ рдХрд╛ рдкрддрд╛ рдЪрд▓рд╛:",
#         "govt_scheme": "\U0001F4CA рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛ рд╡рд┐рд╡рд░рдг:",
#         "weather": "тШАя╕П рдЖрдЬ рдХрд╛ рдореМрд╕рдо:",
#         "chat": "\U0001F916 рдХрд┐рд╕рд╛рди рд╕рд╣рд╛рдпрдХ рдЪреИрдЯрдмреЙрдЯ",
#         "ask_question": "рдХреЛрдИ рдкреНрд░рд╢реНрди рдкреВрдЫреЗрдВ"
#     },
#     "English": {
#         "welcome": "\U0001F33E Welcome to KrishiMitra!",
#         "today_task": "\U0001F4CB Your task for today:",
#         "no_task": "тЪая╕П No specific task for today.",
#         "price_info": "\U0001F4B8 Mandi price information:",
#         "disease_detected": "\U0001F33F Crop disease detected:",
#         "govt_scheme": "\U0001F4CA Government scheme details:",
#         "weather": "тШАя╕П Today's Weather:",
#         "chat": "\U0001F916 Farmer Help Chatbot",
#         "ask_question": "Ask a question"
#     },
#     "Bangoli": {
#         "welcome": "\U0001F33E ржХрзГрж╖рж┐ржорж┐рждрзНрж░рждрзЗ ржЖржкржирж╛ржХрзЗ рж╕рзНржмрж╛ржЧрждржо!",
#         "today_task": "\U0001F4CB ржЖржЬржХрзЗрж░ ржХрж╛ржЬ:",
#         "no_task": "тЪая╕П ржЖржЬ ржХрзЛржи ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХрж╛ржЬ ржирзЗржЗред",
#         "price_info": "\U0001F4B8 ржоржирзНржбрж┐рж░ ржорзВрж▓рзНржп рждржерзНржп:",
#         "disease_detected": "\U0001F33F ржлрж╕рж▓рзЗрж░ рж░рзЛржЧ рж╕ржирж╛ржХрзНржд рж╣ржпрж╝рзЗржЫрзЗ:",
#         "govt_scheme": "\U0001F4CA рж╕рж░ржХрж╛рж░рж┐ ржкрзНрж░ржХрж▓рзНржк ржмрж┐ржмрж░ржг:",
#         "weather": "тШАя╕П ржЖржЬржХрзЗрж░ ржЖржмрж╣рж╛ржУржпрж╝рж╛:",
#         "chat": "\U0001F916 ржЪрж╛рж╖рж┐ рж╕рж╣рж╛ржпрж╝рждрж╛ ржЪрзНржпрж╛ржЯржмржЯ",
#         "ask_question": "ржПржХржЯрж┐ ржкрзНрж░рж╢рзНржи ржЬрж┐ржЬрзНржЮрж╛рж╕рж╛ ржХрж░рзБржи"
#     },

#     "Punjabi": {
#         "welcome": "\U0001F33E риХрйНри░ри┐ри╕ри╝рйА риори┐ридри░ ри╡ри┐рй▒риЪ ридрйБри╣ри╛рибри╛ ри╕рйБриЖриЧрид ри╣рйИ!",
#         "today_task": "\U0001F4CB риЕрй▒риЬ ри▓риИ ридрйБри╣ри╛рибри╛ риХрй░рио:",
#         "no_task": "тЪая╕П риЕрй▒риЬ риХрйЛриИ ри╡ри┐ри╢рйЗри╕ри╝ риХрй░рио риири╣рйАриВ ри╣рйИред",
#         "price_info": "\U0001F4B8 риорй░рибрйА риорйБрй▒ри▓ риЬри╛ригриХри╛ри░рйА:",
#         "disease_detected": "\U0001F33F рилри╕ри▓ рижрйА римри┐риори╛ри░рйА рижрйА рикриЫри╛риг ри╣рйЛриИ:",
#         "govt_scheme": "\U0001F4CA ри╕ри░риХри╛ри░рйА рипрйЛриЬриири╛ ри╡рйЗри░ри╡ри╛:",
#         "weather": "тШАя╕П риЕрй▒риЬ рижри╛ риорйМри╕рио:",
#         "chat": "\U0001F916 риХри┐ри╕ри╛рии ри╕ри╣ри╛риЗридри╛ риЪрйИриЯримрйМриЯ",
#         "ask_question": "риЗрй▒риХ ри╕ри╡ри╛ри▓ рикрйБрй▒риЫрйЛ"
#     },
#     "Bhojpuri": {
#         "welcome": "\U0001F33E рдХреГрд╖рд┐рдорд┐рддреНрд░ рдореЗрдВ рд░рдЙрдЖ рд╕реНрд╡рд╛рдЧрдд рдмрд╛!",
#         "today_task": "\U0001F4CB рдЖрдЬ рдХреЗ рдХрд╛рдо:",
#         "no_task": "тЪая╕П рдЖрдЬ рдХрд╡рдиреЛ рдЦрд╛рд╕ рдХрд╛рдо рдирдЗрдЦреЗред",
#         "price_info": "\U0001F4B8 рдордВрдбреА рдХреЗ рджрд╛рдо рдЬрд╛рдирдХрд╛рд░реА:",
#         "disease_detected": "\U0001F33F рдлрд╕рд▓ рдХреЗ рдмреАрдорд╛рд░реА рдкрд╛рдЗрд▓ рдЧрдЗрд▓:",
#         "govt_scheme": "\U0001F4CA рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛ рд╡рд┐рд╡рд░рдг:",
#         "weather": "тШАя╕П рдЖрдЬ рдХреЗ рдореМрд╕рдо:",
#         "chat": "\U0001F916 рдХрд┐рд╕рд╛рди рдорджрдж рдЪреИрдЯрдмреЙрдЯ",
#         "ask_question": "рдХреЛрдИ рд╕рд╡рд╛рд▓ рдкреВрдЫреАрдВ"
#     },
#     "Tamil": {
#         "welcome": "\U0001F33E роХро┐ро░рпБро╖ро┐рооро┐родрпНро░ро╛ро╡ро┐ро▒рпНроХрпБ ро╡ро░ро╡рпЗро▒рпНроХро┐ро▒рпЛроорпН!",
#         "today_task": "\U0001F4CB роЗройрпНро▒рпИроп роЙроЩрпНроХро│рпН ро╡рпЗро▓рпИ:",
#         "no_task": "тЪая╕П роЗройрпНро▒рпИроХрпНроХрпБ роЪро┐ро▒рокрпНрокрпБ ро╡рпЗро▓рпИ роЗро▓рпНро▓рпИ.",
#         "price_info": "\U0001F4B8 роорогрпНроЯро┐ ро╡ро┐ро▓рпИ родроХро╡ро▓рпН:",
#         "disease_detected": "\U0001F33F рокропро┐ро░рпН роирпЛропрпН роХрогрпНроЯро▒ро┐ропрокрпНрокроЯрпНроЯродрпБ:",
#         "govt_scheme": "\U0001F4CA роЕро░роЪрпБ родро┐роЯрпНроЯ ро╡ро┐ро╡ро░роЩрпНроХро│рпН:",
#         "weather": "тШАя╕П роЗройрпНро▒рпИроп ро╡ро╛ройро┐ро▓рпИ:",
#         "chat": "\U0001F916 ро╡ро┐ро╡роЪро╛роп роЙродро╡ро┐ роЪроирпНродрпИ",
#         "ask_question": "роТро░рпБ роХрпЗро│рпНро╡ро┐ роХрпЗро│рпБроЩрпНроХро│рпН"
#     },
#     "Telugu": {
#         "welcome": "\U0001F33E р░Хр▒Гр░╖р░┐р░ор░┐р░др▒Нр░░р░╛ р░Хр▒Б р░╕р▒Нр░╡р░╛р░Чр░др░В!",
#         "today_task": "\U0001F4CB р░Ир░░р▒Лр░Ьр▒Б р░ор▒А р░кр░ир░┐:",
#         "no_task": "тЪая╕П р░И р░░р▒Лр░Ьр▒Б р░кр▒Нр░░р░др▒Нр░пр▒Зр░Хр░ор▒Ир░и р░кр░ир░┐ р░▓р▒Зр░жр▒Б.",
#         "price_info": "\U0001F4B8 р░ор░Вр░бр▒А р░зр░░р░▓ р░╕р░ор░╛р░Ър░╛р░░р░В:",
#         "disease_detected": "\U0001F33F р░кр░Вр░Я р░╡р▒Нр░пр░╛р░зр░┐ р░Чр▒Бр░░р▒Нр░др░┐р░Вр░Ър░мр░бр░┐р░Вр░жр░┐:",
#         "govt_scheme": "\U0001F4CA р░кр▒Нр░░р░нр▒Бр░др▒Нр░╡р░В р░кр░ер░Х р░╡р░┐р░╡р░░р░╛р░▓р▒Б:",
#         "weather": "тШАя╕П р░Ир░░р▒Лр░Ьр▒Б р░╡р░╛р░др░╛р░╡р░░р░гр░В:",
#         "chat": "\U0001F916 р░░р▒Ир░др▒Б р░╕р░╣р░╛р░п р░Ър░╛р░Яр▒Нр░мр░╛р░Яр▒Н",
#         "ask_question": "р░кр▒Нр░░р░╢р▒Нр░ир░ир▒Б р░Ер░бр░Чр░Вр░бр░┐"
#     },
#     "Odia": {
#         "welcome": "\U0001F33E рмХрнГрм╖рм┐рморм┐рмдрнНрм░рмХрнБ рм╕рнНрн▒рм╛рмЧрмд!",
#         "today_task": "\U0001F4CB рмЖрмЬрм┐рм░ рмХрм╛рм░рнНрмпрнНрнЯ:",
#         "no_task": "тЪая╕П рмЖрмЬрм┐ рмХрнМрмгрм╕рм┐ рммрм┐рм╢рнЗрм╖ рмХрм╛рм░рнНрмпрнНрнЯ рмирм╛рм╣рм┐рмБред",
#         "price_info": "\U0001F4B8 рмормгрнНрмбрм┐ рмжрм░ рм╕рнВрмЪрмирм╛:",
#         "disease_detected": "\U0001F33F рмкрм╛рмгрм┐рмЧрмЫ рм░рнЛрмЧ рмЪрм┐рм╣рнНрмирмЯ:",
#         "govt_scheme": "\U0001F4CA рм╕рм░рмХрм╛рм░рнА рмпрнЛрмЬрмирм╛ рммрм┐рммрм░рмгрнА:",
#         "weather": "тШАя╕П рмЖрмЬрм┐рм░ рмкрм╛рмгрм┐рмкрм╛рмЧ:",
#         "chat": "\U0001F916 рмХрнГрм╖рмХ рм╕рм╛рм╣рм╛рмпрнНрнЯ рмЪрнНрнЯрм╛рмЯрнНрммрмЯрнН",
#         "ask_question": "рмкрнНрм░рм╢рнНрми рмкрмЪрм╛рм░рмирнНрмдрнБ"
#     },
#     "Chhattisgarhi": {
#         "welcome": "\U0001F33E рдХреГрд╖рд┐рдорд┐рддреНрд░ рдордВ рдЖрдкрдорди рд▓рд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реЗ!",
#         "today_task": "\U0001F4CB рдЖрдЬ рдХреЗ рдХрд╛рдо рд╣реЗ:",
#         "no_task": "тЪая╕П рдЖрдЬ рдХреЛрдиреЛ рдЦрд╛рд╕ рдХрд╛рдо рдирдЗ рд╣реЗред",
#         "price_info": "\U0001F4B8 рдордВрдбреА рдХреЗ рднрд╛рд╡ рдЬрд╛рдирдХрд╛рд░реА:",
#         "disease_detected": "\U0001F33F рдлрд╕рд▓ рдордВ рд░реЛрдЧ рдорд┐рд▓рд┐рд╕:",
#         "govt_scheme": "\U0001F4CA рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛ рдХреЗ рдЬрд╛рдирдХрд╛рд░реА:",
#         "weather": "тШАя╕П рдЖрдЬ рдХреЗ рдореМрд╕рдо:",
#         "chat": "\U0001F916 рдХрд┐рд╕рд╛рди рд╕рд╣рд╛рдпрддрд╛ рдЪреИрдЯрдмреЙрдЯ",
#         "ask_question": "рдХреЛрдиреЛ рд╕рд╡рд╛рд▓ рдкреВрдЫрд╡"
#     }

# }

# TASKS = [
#     "Check soil moisture levels",
#     "Irrigate tomato crops",
#     "Spray pesticide for aphids",
#     "Harvest brinjal",
#     "Apply organic fertilizer to field"
# ]

# MANDI_PRICES = {
#     "wheat": "тВ╣2200/qtl",
#     "rice": "тВ╣1800/qtl",
#     "mustard": "тВ╣5500/qtl",
#     "maize": "тВ╣1700/qtl",
#     "barley": "тВ╣1600/qtl",
#     "soybean": "тВ╣4800/qtl",
#     "cotton": "тВ╣6600/qtl",
#     "groundnut": "тВ╣5500/qtl",
#     "sugarcane": "тВ╣340/qtl",
#     "potato": "тВ╣1200/qtl",
#     "onion": "тВ╣900/qtl",
#     "tomato": "тВ╣1100/qtl"
# }
# GOVT_SCHEMES = {
#     "PM-KISAN": "тВ╣6000 per year to eligible farmers in three installments.",
#     "PMFBY": "Pradhan Mantri Fasal Bima Yojana: Crop insurance at nominal premium rates.",
#     "Soil Health Card": "Provides soil nutrient status and recommendations for balanced use of fertilizers.",
#     "KCC": "Kisan Credit Card: Short-term credit to farmers for cultivation expenses at low interest.",
#     "eNAM": "National Agriculture Market: Unified national market for agricultural commodities.",
#     "RKVY": "Rashtriya Krishi Vikas Yojana: Funds to support agricultural infrastructure and innovation.",
#     "PUSA Krishi": "Access to agri-tech solutions from ICAR-PUSA for higher productivity.",
#     "Agri Infrastructure Fund": "тВ╣1 Lakh Cr fund for building warehouses, cold storage and processing units.",
#     "Atma Nirbhar Krishi": "Promotes self-reliance in agriculture with reforms in APMC, contract farming.",
#     "PM Kusum": "Subsidy for installing solar pumps and grid-connected renewable power systems for irrigation."
# }
# # ------------------ UI ------------------
# st.set_page_config(page_title="KrishiMitra", layout="centered")
# st.markdown("""
#     <style>
#     .main {
#         background-color: #f6fff4;
#     }
#     .stButton>button {
#         background-color: #4CAF50;
#         color: white;
#         border-radius: 10px;
#         padding: 0.5em 1em;
#     }
#     .stTextInput>div>input {
#         border-radius: 8px;
#     }
#     </style>
# """, unsafe_allow_html=True)

# lang = st.selectbox("Choose Language / рднрд╛рд╖рд╛ рдЪреБрдиреЗрдВ / ржнрж╛рж╖рж╛ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи", options=["English", "Hindi", "Bangoli","Punjabi","Chhatishgharh","odia","Tamil","Telgu","Bhojpuri"])
# st.title(LANGUAGE_DATA[lang]["welcome"])
# if st.button("ЁЯФК Speak Welcome"):
#     speak_text(LANGUAGE_DATA[lang]["welcome"])

# # ------------------ Task Suggestion ------------------
# st.markdown("---")
# today = datetime.now().day
# if today % 2 == 0:
#     st.subheader(LANGUAGE_DATA[lang]['today_task'])
#     task = TASKS[today % len(TASKS)]
#     st.success(f"тЬЕ {task}")
#     if st.button("ЁЯФК Speak Task"):
#         speak_text(task)
# else:
#     st.info(LANGUAGE_DATA[lang]['no_task'])
#     if st.button("ЁЯФК Speak Info"):
#         speak_text(LANGUAGE_DATA[lang]['no_task'])

# # ------------------ Mandi Prices ------------------
# st.markdown("---")
# st.subheader(LANGUAGE_DATA[lang]['price_info'])
# price_text = ""
# for crop, price in MANDI_PRICES.items():
#     st.markdown(f"- **{crop.title()}**: {price}")
#     price_text += f"{crop.title()} {price}. "
# if st.button("ЁЯФК Speak Prices"):
#     speak_text(price_text)

# # ------------------ Government Schemes ------------------
# st.markdown("---")
# st.subheader(LANGUAGE_DATA[lang]['govt_scheme'])
# scheme = st.selectbox("Select Scheme", list(GOVT_SCHEMES.keys()))
# st.info(f"ЁЯУЛ {GOVT_SCHEMES[scheme]}")
# if st.button("ЁЯФК Speak Scheme"):
#     speak_text(GOVT_SCHEMES[scheme])

# # ------------------ Crop Disease Detection ------------------
# st.markdown("---")
# st.subheader(LANGUAGE_DATA[lang]['disease_detected'])
# image = st.file_uploader("Upload Crop Image", type=["jpg", "jpeg", "png"])
# if image:
#     st.image(image, caption="Uploaded Image", use_column_width=True)
#     st.warning("ЁЯзк Simulated Result: Blight detected in tomato leaves")
#     if st.button("ЁЯФК Speak Detection Result"):
#         speak_text("Blight detected in tomato leaves")

# # ------------------ Weather Forecast (Simulated) ------------------
# st.markdown("---")
# st.subheader(LANGUAGE_DATA[lang]['weather'])
# location = st.text_input("Enter Your Village or District Name")
# if location:
#     weather_report = f"Simulated Weather for {location}: 35┬░C, Clear Sky, Wind 10 km/h"
#     st.info(f"ЁЯУН {weather_report}")
#     if st.button("ЁЯФК Speak Weather"):
#         speak_text(weather_report)

# # ------------------ Farmer Chatbot (Simulated) ------------------
# st.markdown("---")
# st.subheader(LANGUAGE_DATA[lang]['chat'])
# query = st.text_input(LANGUAGE_DATA[lang]["ask_question"])
# if query:
#     reply = "Please use neem-based pesticides for aphids."
#     st.success(f"ЁЯдЦ Chatbot: {reply}")
#     if st.button("ЁЯФК Speak Chatbot Reply"):
#         speak_text(reply)
